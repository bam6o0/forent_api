// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "forent": middlecategory Resource Client
//
// Command:
// $ goagen
// --design=forent_api/design
// --out=$(GOPATH)/src/forent_api
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"strconv"
)

// ListMiddlecategoryPath computes a request path to the list action of middlecategory.
func ListMiddlecategoryPath() string {

	return fmt.Sprintf("/middlecategories")
}

// Retrieve all middlecategories.
func (c *Client) ListMiddlecategory(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewListMiddlecategoryRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewListMiddlecategoryRequest create the request corresponding to the list action endpoint of the middlecategory resource.
func (c *Client) NewListMiddlecategoryRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}

// ShowMiddlecategoryPath computes a request path to the show action of middlecategory.
func ShowMiddlecategoryPath(middlecategoryID int) string {
	param0 := strconv.Itoa(middlecategoryID)

	return fmt.Sprintf("/middlecategories/%s", param0)
}

// Get middlecategory by id
func (c *Client) ShowMiddlecategory(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowMiddlecategoryRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowMiddlecategoryRequest create the request corresponding to the show action endpoint of the middlecategory resource.
func (c *Client) NewShowMiddlecategoryRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
