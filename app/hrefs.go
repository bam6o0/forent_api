// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "forent": Application Resource Href Factories
//
// Command:
// $ goagen
// --design=forent_api/design
// --out=$(GOPATH)/src/forent_api
// --version=v1.3.1

package app

import (
	"fmt"
	"strings"
)

// ArticleHref returns the resource href.
func ArticleHref(articleID interface{}) string {
	paramarticleID := strings.TrimLeftFunc(fmt.Sprintf("%v", articleID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/articles/%v", paramarticleID)
}

// AuthenticationHref returns the resource href.
func AuthenticationHref(userID interface{}) string {
	paramuserID := strings.TrimLeftFunc(fmt.Sprintf("%v", userID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/authentications/%v", paramuserID)
}

// CategoryHref returns the resource href.
func CategoryHref(categoryID interface{}) string {
	paramcategoryID := strings.TrimLeftFunc(fmt.Sprintf("%v", categoryID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/categories/%v", paramcategoryID)
}

// CommentHref returns the resource href.
func CommentHref(itemID interface{}) string {
	paramitemID := strings.TrimLeftFunc(fmt.Sprintf("%v", itemID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/comments/%v", paramitemID)
}

// ItemHref returns the resource href.
func ItemHref(itemID interface{}) string {
	paramitemID := strings.TrimLeftFunc(fmt.Sprintf("%v", itemID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/items/%v", paramitemID)
}

// LargecategoryHref returns the resource href.
func LargecategoryHref(largecategoryID interface{}) string {
	paramlargecategoryID := strings.TrimLeftFunc(fmt.Sprintf("%v", largecategoryID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/largecategories/%v", paramlargecategoryID)
}

// MiddlecategoryHref returns the resource href.
func MiddlecategoryHref(middlecategoryID interface{}) string {
	parammiddlecategoryID := strings.TrimLeftFunc(fmt.Sprintf("%v", middlecategoryID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/middlecategories/%v", parammiddlecategoryID)
}

// OfferHref returns the resource href.
func OfferHref(ownerID interface{}) string {
	paramownerID := strings.TrimLeftFunc(fmt.Sprintf("%v", ownerID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/offers/%v", paramownerID)
}

// ProfileHref returns the resource href.
func ProfileHref(userID interface{}) string {
	paramuserID := strings.TrimLeftFunc(fmt.Sprintf("%v", userID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/profiles/%v", paramuserID)
}

// UserHref returns the resource href.
func UserHref(userID interface{}) string {
	paramuserID := strings.TrimLeftFunc(fmt.Sprintf("%v", userID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/users/%v", paramuserID)
}
