// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "forent": Model Helpers
//
// Command:
// $ goagen
// --design=forent_api/design
// --out=$(GOPATH)/src/forent_api
// --version=v1.3.1

package models

import (
	"context"
	"forent_api/app"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"time"
)

// MediaType Retrieval Functions

// ListLargecategory returns an array of view: default.
func (m *LargeCategoryDB) ListLargecategory(ctx context.Context) []*app.Largecategory {
	defer goa.MeasureSince([]string{"goa", "db", "largecategory", "listlargecategory"}, time.Now())

	var native []*LargeCategory
	var objs []*app.Largecategory
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing LargeCategory", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.LargeCategoryToLargecategory())
	}

	return objs
}

// LargeCategoryToLargecategory loads a LargeCategory and builds the default view of media type Largecategory.
func (m *LargeCategory) LargeCategoryToLargecategory() *app.Largecategory {
	largecategory := &app.Largecategory{}
	largecategory.ID = m.ID
	largecategory.Name = m.Name
	largecategory.NameBase = m.NameBase
	largecategory.NameEn = m.NameEn

	return largecategory
}

// OneLargecategory loads a LargeCategory and builds the default view of media type Largecategory.
func (m *LargeCategoryDB) OneLargecategory(ctx context.Context, id int) (*app.Largecategory, error) {
	defer goa.MeasureSince([]string{"goa", "db", "largecategory", "onelargecategory"}, time.Now())

	var native LargeCategory
	err := m.Db.Scopes().Table(m.TableName()).Preload("MiddleCategories").Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting LargeCategory", "error", err.Error())
		return nil, err
	}

	view := *native.LargeCategoryToLargecategory()
	return &view, err
}
