// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "forent": Model Helpers
//
// Command:
// $ goagen
// --design=forent_api/design
// --out=$(GOPATH)/src/forent_api
// --version=v1.3.1

package models

import (
	"context"
	"forent_api/app"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"time"
)

// MediaType Retrieval Functions

// ListProfile returns an array of view: default.
func (m *ProfileDB) ListProfile(ctx context.Context) []*app.Profile {
	defer goa.MeasureSince([]string{"goa", "db", "profile", "listprofile"}, time.Now())

	var native []*Profile
	var objs []*app.Profile
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing Profile", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.ProfileToProfile())
	}

	return objs
}

// ProfileToProfile loads a Profile and builds the default view of media type Profile.
func (m *Profile) ProfileToProfile() *app.Profile {
	profile := &app.Profile{}
	profile.Address = m.Address
	profile.AvatarImage = m.AvatarImage
	profile.CoverImage = m.CoverImage
	profile.ID = m.ID
	profile.Introduction = m.Introduction
	profile.Phone = m.Phone

	return profile
}

// OneProfile loads a Profile and builds the default view of media type Profile.
func (m *ProfileDB) OneProfile(ctx context.Context, id int) (*app.Profile, error) {
	defer goa.MeasureSince([]string{"goa", "db", "profile", "oneprofile"}, time.Now())

	var native Profile
	err := m.Db.Scopes().Table(m.TableName()).Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting Profile", "error", err.Error())
		return nil, err
	}

	view := *native.ProfileToProfile()
	return &view, err
}
